{"version":3,"sources":["services/key.js","services/MovieContext.js","components/MovieList.js","components/Search.js","App.js","index.js"],"names":["API_KEY","MovieContext","createContext","MovieProvider","props","useState","movies","setMovies","query","setQuery","queryMovie","setQueryMovie","isMovieFound","setIsMovieFound","useEffect","fetch","KEY","then","res","json","data","results","length","filteredMovies","filter","movie","poster_path","Provider","value","value1","value2","value3","value4","children","Movie","title","release_date","vote_average","overview","className","src","alt","id","style","color","MovieList","useContext","map","Search","Navbar","Brand","href","Nav","Form","inline","FormControl","type","placeholder","onChange","e","target","Button","onClick","variant","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64892c43.chunk.js","sourcesContent":["// API Key\r\nconst API_KEY = \"7a2b146945e7e94852aa5e4f15ed5478\";\r\n\r\nexport default API_KEY;\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport KEY from \"./key\";\r\n\r\nconst MOVIE_QUERY = \"https://api.themoviedb.org/3/search/movie?\";\r\nconst TOP_MOVIES = \"https://api.themoviedb.org/3/movie/popular?\";\r\n\r\nexport const MovieContext = createContext();\r\n\r\nexport const MovieProvider = (props) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [queryMovie, setQueryMovie] = useState(false);\r\n  const [isMovieFound, setIsMovieFound] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetch(`${TOP_MOVIES}api_key=${KEY}&language=en-US&page=1`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(\"FETCHING POPULAR MOVIES\");\r\n        setMovies(data.results);\r\n      });\r\n  }, []);\r\n\r\n  if (queryMovie === true) {\r\n    if (query !== \"\") {\r\n      fetch(`${MOVIE_QUERY}api_key=${KEY}&language=en-US&query=${query}&page=1`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.results.length > 0) {\r\n            // console.log(`FETCHING FOR ${query} MOVIES`);\r\n            let filteredMovies = data.results.filter((movie) => {\r\n              return movie.poster_path != null;\r\n            });\r\n            // console.log(filteredMovies);\r\n            setMovies(filteredMovies);\r\n            setIsMovieFound(true);\r\n            setQueryMovie(false);\r\n            setQuery(\"\");\r\n          } else {\r\n            setIsMovieFound(false);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{\r\n        value1: [query, setQuery],\r\n        value2: [movies, setMovies],\r\n        value3: [queryMovie, setQueryMovie],\r\n        value4: [isMovieFound, setIsMovieFound],\r\n      }}\r\n    >\r\n      {props.children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { MovieContext } from \"../services/MovieContext\";\r\n\r\nconst Movie = (props) => {\r\n  const { title, release_date, poster_path, vote_average, overview } = props;\r\n  const IMG_URL = \"http://image.tmdb.org/t/p/w1280\";\r\n\r\n  return (\r\n    <section className=\"movie-container\">\r\n      <div className=\"movie\">\r\n        <figure className=\"movie-front\">\r\n          <img src={IMG_URL + poster_path} alt=\"\" />\r\n          <div className=\"rating-container\">\r\n            <p\r\n              id=\"rating\"\r\n              style={{\r\n                color:\r\n                  vote_average < 4\r\n                    ? \"red\"\r\n                    : vote_average >= 4 && vote_average < 7\r\n                    ? \"orange\"\r\n                    : \"green\",\r\n              }}\r\n            >\r\n              {vote_average}\r\n            </p>\r\n          </div>\r\n          <div className=\"movie-info\">\r\n            <p>{title}</p>\r\n            <p>{release_date}</p>\r\n          </div>\r\n        </figure>\r\n        <figure className=\"movie-back\">\r\n          <p> {overview}</p>\r\n        </figure>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst MovieList = () => {\r\n  const { value2, value4 } = useContext(MovieContext);\r\n  const [movies, setMovies] = value2;\r\n  const [isMovieFound, setIsMovieFound] = value4;\r\n\r\n  return (\r\n    <div className={isMovieFound ? \"movie-list\" : \"try-again\"}>\r\n      {isMovieFound ? (\r\n        movies.map((movie) => {\r\n          return <Movie key={movie.id} {...movie} />;\r\n        })\r\n      ) : (\r\n        <h2>We couldn't find any movies with that name. Please try again!</h2>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default MovieList;\r\n","import React, { useContext } from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { MovieContext } from \"../services/MovieContext\";\r\n\r\nconst Search = () => {\r\n  const { value1, value2, value3 } = useContext(MovieContext);\r\n  const [query, setQuery] = value1;\r\n  const [movies, setMovies] = value2;\r\n  const [queryMovie, setQueryMovie] = value3;\r\n\r\n  function changeQuery(e) {\r\n    setQuery(e.target.value);\r\n  }\r\n\r\n  const fetchMovie = () => {\r\n    setQueryMovie(true);\r\n    // console.log(`Search Button is pressed.`);\r\n  };\r\n\r\n  return (\r\n    <Navbar>\r\n      <Navbar.Brand href=\"https://danielgoncalves25.github.io/Movie-Search/\">\r\n        <p> Daniel Goncalves </p>\r\n      </Navbar.Brand>\r\n      <Nav className=\"mr-auto\"></Nav>\r\n      <Form inline>\r\n        <FormControl\r\n          type=\"text\"\r\n          placeholder=\"Search for a movie\"\r\n          className=\"mr-sm-2 search\"\r\n          value={query}\r\n          onChange={changeQuery}\r\n        />\r\n        <Button onClick={fetchMovie} variant=\"outline-info\">\r\n          Search\r\n        </Button>\r\n      </Form>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import \"./App.css\";\nimport MovieList from \"./components/MovieList\";\nimport Search from \"./components/Search\";\nimport { MovieProvider } from \"./services/MovieContext\";\n\nfunction App() {\n  return (\n    <MovieProvider>\n      <div className=\"App\">\n        <Search />\n        <MovieList />\n      </div>\n    </MovieProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}